#pragma checksum "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Vote.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b4b68bf39dd780de32101ef345e0728e731c8f0a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Vote), @"mvc.1.0.view", @"/Views/Home/Vote.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\_ViewImports.cshtml"
using UrnaAPI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\_ViewImports.cshtml"
using UrnaAPI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b4b68bf39dd780de32101ef345e0728e731c8f0a", @"/Views/Home/Vote.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2b4ef810e8faad348f546a88299cda27e3fc37d9", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Vote : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<UrnaAPI.Models.Candidate>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Vote.cshtml"
  
    ViewData["Title"] = "Contagem de Votos";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.4.1/chart.min.js"" integrity=""sha512-5vwN8yor2fFT9pgPS9p9R7AszYaNn0LkQElTXIsZFCL7ucT8zDCAqlQXDdaqgA1mZP47hdvztBMsIoFxq/FyyQ=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>
<canvas id=""myChart"" width=""1600"" height=""900""></canvas>

<table class=""table"">
    <thead>
        <tr>
            <th>
                Nome do Candidato
            </th>
            <th>
                Total de Votos
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
");
#nullable restore
#line 24 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Vote.cshtml"
         foreach (var item in Model.OrderByDescending(p => p.Votes.Count))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tr>\r\n                <td>\r\n                    ");
#nullable restore
#line 28 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Vote.cshtml"
               Write(Html.DisplayFor(modelItem => item.CandidateName));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");
#nullable restore
#line 31 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Vote.cshtml"
               Write(Html.DisplayFor(modelItem => item.Votes.Count));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </td>\r\n            </tr>\r\n");
#nullable restore
#line 34 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Vote.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </tbody>
</table>

<script>
    const urlCandidate = 'https://localhost:44362/api/Candidates';

    var names = [];
    var votes = [];

    fetch(urlCandidate)
        .then(response => response.json())
        .then(data => plotGraph(data))
        .catch(error => console.error('Não foi possível consultar os candidatos.', error));


    function plotGraph(data) {

        data.sort((a, b) => parseInt(b[""votes""].length) - parseInt(a[""votes""].length));

        data.forEach(item => {
            names.push(item[""candidateName""]);
            votes.push(item[""votes""].length);
        });

        var ctx = document.getElementById(""myChart"");
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: names,
                datasets: [
                    {
                        data: votes,
                        label: ""Votos""
                    }
                ]
            }
        });
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<UrnaAPI.Models.Candidate>> Html { get; private set; }
    }
}
#pragma warning restore 1591
