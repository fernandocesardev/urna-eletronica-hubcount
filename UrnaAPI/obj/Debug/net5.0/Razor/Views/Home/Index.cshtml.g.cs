#pragma checksum "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fccec0d29e0f4390e94178e2d2c12f68a67a8fcd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\_ViewImports.cshtml"
using UrnaAPI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\_ViewImports.cshtml"
using UrnaAPI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fccec0d29e0f4390e94178e2d2c12f68a67a8fcd", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2b4ef810e8faad348f546a88299cda27e3fc37d9", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<UrnaAPI.Models.Candidate>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/modal.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/urn.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Pichau\source\repos\TUrnaAPI\UrnaAPI\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "fccec0d29e0f4390e94178e2d2c12f68a67a8fcd4363", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "fccec0d29e0f4390e94178e2d2c12f68a67a8fcd5478", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div class=""text-center"">
    <h1 class=""display-4"">Bem-Vindo Eleitor</h1>

    <div class=""urnBackground"">
        <div id=""candidateInfo"" class=""candidateInfoBackground"">
            <div class=""ticketNumberRow"">
                <div id=""ticketNumbers"" class=""ticketNumbersBackground"">
                    <input id=""number1"" type=""number"" maxlength=""1"" class=""ticketNumber"" readonly />
                    <input id=""number2"" type=""number"" maxlength=""1"" class=""ticketNumber"" readonly />
                </div>
            </div>

            <div class=""labelsRow"">
                <div id=""labels"" class=""labelsBackground"">
                    <label id=""candidateName"" class=""labelText"">
                    </label>
                    <label id=""candidateVice"" class=""labelText"">
                    </label>
                </div>
            </div>
        </div>

        <div id=""keypad"" class=""keypadBackground"">
            <div class=""buttonTicketRow"">
                <button id=""n");
            WriteLiteral(@"umberButton1"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""1""> 1 </button>
                <button id=""numberButton2"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""2""> 2 </button>
                <button id=""numberButton3"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""3""> 3 </button>
                <button id=""numberButton4"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""4""> 4 </button>
                <button id=""numberButton5"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""5""> 5 </button>
                <button id=""numberButton6"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""6""> 6 </button>
                <button id=""numberButton7"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""7""> 7 </button>
                <button id=""numberButton8"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""8""> 8 </button>
                <button id=""numberButton9"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=");
            WriteLiteral(@"""9""> 9 </button>

                <button class=""keypadButton"" style=""visibility: hidden""></button>
                <button id=""numberButton"" class=""keypadButton"" onClick=""SetValue(this.value)"" value=""0""> 0 </button>
                <button class=""keypadButton"" style=""visibility: hidden"">  </button>
            </div>

            <div class=""buttonUtilRow"">
                <button id=""whiteButton"" class=""keypadWhiteButton"" onclick=""WhiteVote()""> Branco </button>
                <button id=""correctButton"" class=""keypadCorrectButton"" onClick=""Clear()""> Corrige </button>
                <button id=""confirmButton"" class=""keypadConfirmButton"" disabled onClick=""Vote()""> Confirma </button>
            </div>
        </div>
    </div>
</div>

<div id=""myModal"" class=""modal"">

    <div class=""modal-content"">
        <span class=""close"">‚ü≥</span>
        <p>Sucesso!</p>
    </div>

</div>

<script>

    const uriCandidate = 'api/Candidates';
    const uriVotes = 'api/Votes';

    //Support");
            WriteLiteral(@" Variables
    let candidateId;

    function SetValue(ClickedValue) {
        if (!document.getElementById(""number1"").value != """") {
            document.getElementById(""number1"").value = ClickedValue;
        }
        else if (!document.getElementById(""number2"").value != """") {
            document.getElementById(""number2"").value = ClickedValue;
            SearchCandidate();
        }
        else {
            document.getElementById(""numberButton"").disabled = true;
            document.getElementById(""numberButton1"").disabled = true;
            document.getElementById(""numberButton2"").disabled = true;
            document.getElementById(""numberButton3"").disabled = true;
            document.getElementById(""numberButton4"").disabled = true;
            document.getElementById(""numberButton5"").disabled = true;
            document.getElementById(""numberButton6"").disabled = true;
            document.getElementById(""numberButton7"").disabled = true;
            document.getElementById(""nu");
            WriteLiteral(@"mberButton8"").disabled = true;
            document.getElementById(""numberButton9"").disabled = true;
        }
    }

    function Clear() {
        document.getElementById(""number1"").value = """";
        document.getElementById(""number2"").value = """";
        document.getElementById(""candidateName"").innerText = """";
        document.getElementById(""candidateVice"").innerText = """";
        document.getElementById(""confirmButton"").disabled = true;

        document.getElementById(""numberButton"").disabled = false;
        document.getElementById(""numberButton1"").disabled = false;
        document.getElementById(""numberButton2"").disabled = false;
        document.getElementById(""numberButton3"").disabled = false;
        document.getElementById(""numberButton4"").disabled = false;
        document.getElementById(""numberButton5"").disabled = false;
        document.getElementById(""numberButton6"").disabled = false;
        document.getElementById(""numberButton7"").disabled = false;
        document.getE");
            WriteLiteral(@"lementById(""numberButton8"").disabled = false;
        document.getElementById(""numberButton9"").disabled = false;
    }

    function WhiteVote() {
        document.getElementById(""number1"").value = ""0"";
        document.getElementById(""number2"").value = ""0"";
        SearchCandidate();
    }

    function Vote() {
        const item = {
            registryDate: GetTodayDate(),
            candidateId: candidateId
        };

        fetch(uriVotes, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(item)
        })
            .then(response => response.json())
            .then(VoteSuccess())
            .catch(error => console.error('N√£o foi poss√≠vel efetuar o voto.', error));
    }

    function VoteSuccess() {
        modal.style.display = ""block""
    }

    function SearchCandidate() {

        var ticket = document.getElemen");
            WriteLiteral(@"tById(""number1"").value + document.getElementById(""number2"").value;

        if (ticket == '00') { ticket = 0 }

        fetch(uriCandidate)
            .then(response => response.json())
            .then(data => _displayCandidate(data, ticket))
            .catch(error => console.error('N√£o foi poss√≠vel consultar os candidatos.', error));

    }

    function GetTodayDate() {
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0');
        var yyyy = today.getFullYear();

        return today = yyyy + '-' + mm + '-' + dd;
    }

    function _displayCandidate(data, ticket) {
        data.forEach(item => {
            if (item[""ticket""] == ticket) {
                candidateId = item[""candidateId""]
                document.getElementById(""candidateName"").innerText = ""Nome do Candidato: "" + item[""candidateName""];
                document.getElementById(""candidateVice"").innerText = ""Nome do");
            WriteLiteral(@" Vice-Candidato: "" + item[""viceName""];
                document.getElementById(""confirmButton"").disabled = false;
            }
        });
    }

    var modal = document.getElementById(""myModal"");

    var span = document.getElementsByClassName(""close"")[0];

    span.onclick = function () {
        modal.style.display = ""none"";
        window.location.reload(true)
    }

    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = ""none"";
            window.location.reload(true)
        }
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<UrnaAPI.Models.Candidate>> Html { get; private set; }
    }
}
#pragma warning restore 1591
